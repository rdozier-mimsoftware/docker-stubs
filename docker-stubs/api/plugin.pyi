from typing import Generator

from .. import auth as auth, utils as utils
from _typeshed import Incomplete

from ..types.io import Json
from ..types.io import JsonDict
from ..types.io import ResponseResult
from ..types.misc_types import TrueOnSuccess


class PluginApiMixin:
    def configure_plugin(self, name: str, options: dict) -> TrueOnSuccess: ...
    def create_plugin(self, name: str, plugin_data_dir: str, gzip: bool = ...) -> TrueOnSuccess: ...
    def disable_plugin(self, name: str, force: bool = ...) -> TrueOnSuccess: ...
    def enable_plugin(self, name: str, timeout: int = ...) -> TrueOnSuccess: ...
    def inspect_plugin(self, name: str) -> JsonDict: ...
    def pull_plugin(self, remote: str, privileges: list, name: str | None = ...) -> Generator[ResponseResult, None, None]: ...
    def plugins(self) -> list[dict[str, Json]]: ...
    def plugin_privileges(self, name: str) -> list[dict[str, Json]]: ...
    def push_plugin(self, name: str) -> Generator[ResponseResult, None, None]: ...
    def remove_plugin(self, name: str, force: bool = ...) -> TrueOnSuccess: ...
    def upgrade_plugin(self, name: str, remote: str, privileges: list) -> Generator[ResponseResult, None, None]: ...
